### 1.单机
    缺点:
        单机、容量、容错
### 2.主从

    多节点，分为主从，主服务节点-->从服务节点【Master每执行一个写命令就会向Slave发送相同的写命令】
        容量、单机

    主节点故障，需要人工干预
        -->需要手动将一个从节点晋升为主节点，同时需要修改应用方的主节点地址，还需要命令从其他从节点复制新的主节点。
    主节点的写能力受到单机的限制
    主节点的存储能力受到单机的限制

    
#### 搭建
    https://www.cnblogs.com/xiaoxian1369/p/4663973.html
    (1)启动后配置
        salveof host port【丢弃旧的数据，同时会触发数据同步】
        状态查询：
            info
            info replication

                # Replication
                role:master

                # Replication
                role:slave

        加入有密码：
            config set masterauth redis         

    (2)启动前配置-->配置文件
    (3)脱离-->可以用于主机故障，从机继任。
        slaveof no one
        
        利用『 SLAVEOF NO ONE 不会丢弃同步所得数据集』这个特性，
        可以在主服务器失败的时候，将从属服务器用作新的主服务器，从而实现无间断运行。

    (4)数据同步
        sync 和 psync
        主从刚刚连接的时候，进行全量同步；全同步结束后，进行增量同步。当然，如果有需要，slave 在任何时候都可以发起全量同步。
        redis 策略是，无论如何，首先会尝试进行增量同步，如不成功，要求从机进行全量同步。           
### 3.哨兵
    增加哨兵节点
        容量、单机、故障转移

### 4.集群

    (槽指派/重新分片/故障转移)